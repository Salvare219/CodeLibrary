//求解过程：
//（ 1 ）首先将各点按照x坐标从小到大排列，时间复杂度为 O(nlgn) 
//（ 2 ）寻找子结构：定义从 Pi 到 Pj 的路径为：从 Pi 开始，从右到左一直到 P1 ，然后从左到右一直到 Pj 。在这个路径上，会经过 P1 到 Pmax(i,j) 之间的所有点且只经过一次
//在定义 d(i,j) 为满足这一条件的最短路径。我们只考虑 i>=j 的情况
//同时，定义 dist(i,j) 为点 Pi 到 Pj 之间的直线距离
//（ 3 ）最优解：我们需要求的是 d(n,n) 
//关于子问题 d(i,j) 的求解，分三种情况：
//A 、当 j < i - 1 时， d(i,j) = d(i-1,j) + dist(i - 1,i) 
//由定义可知，点 Pi-1 一定在路径 Pi-Pj 上，而且又由于 j<i-1 ,因此 Pi 的左边的相邻点一定是 Pi-1 .因此可以得出上述等式
//B 、当 j = i - 1 时，与 Pi 左相邻的那个点可能是 P1 到 Pi-1 总的任何一个。因此需要递归求出最小的那个路径：
//d(i,j) = d(i,i-1) = min{d(i-1,k) + dist(k,i)}, 其中 1 <= k <= j 
//C 、当 j=i 时，路径上最后相连的两个点可能是 P1-Pi、P2-Pi...Pi-1-Pi 
//因此有：
//d(i,i) = min{d(i,1)+dist(1,i),...,d(i,i-1),dist(i-1,i)}.